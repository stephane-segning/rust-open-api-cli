name: Release

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    permissions: write-all
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            asset_name: openapi_cli_linux
            os: ubuntu-latest
            mv: mv
          - target: x86_64-apple-darwin
            asset_name: openapi_cli_macos
            os: macos-latest
            mv: mv
          - target: x86_64-pc-windows-gnu
            asset_name: openapi_cli_windows.exe
            os: windows-latest
            mv: ren

    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Build
        run: cargo build --release --verbose
      - name: Move
        run: ${{ matrix.mv }} target/release/openapi_gen target/release/${{ matrix.asset_name }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.asset_name }}
          path: target/release/${{ matrix.asset_name }}

  release:
    permissions: write-all
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: .
      - name: Upload Release Asset (Linux)
        id: upload_release_asset_linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./openapi_cli_linux
          asset_name: openapi_cli_linux
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (macOS)
        id: upload_release_asset_macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./openapi_cli_macos
          asset_name: openapi_cli_macos
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (Windows)
        id: upload_release_asset_windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./openapi_cli_windows.exe
          asset_name: openapi_cli_windows.exe
          asset_content_type: application/octet-stream
